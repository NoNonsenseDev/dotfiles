lua vim.loader.enable()
lua require("plugins")
lua require("user")

" Git
nnoremap <silent> <leader>gg <cmd>LazyGit<cr>
nnoremap <silent> <leader>gf <cmd>LazyGitFilterCurrentFile<cr>

nnoremap <silent><C-Up> <cmd>resize -6<cr>
nnoremap <silent><C-Down> <cmd>resize +6<cr>
nnoremap <silent><C-Left> <cmd>vertical resize -6<cr>
nnoremap <silent><C-Right> <cmd>vertical resize +6<cr>

" Navigation
nnoremap <C-d> 8jzzzv<cr>
nnoremap <C-u> 8kzzzv<cr>

" Fix gx on Mac to open links, images etc with `open`
nmap <silent> gx :!open <cfile><cr>

" vmap <leader>f <Plug>(coc-format-selected)
" nmap <leader>f <Plug>(coc-format-selected)

" Visual mode pressing * or # searches for the current selection
vnoremap <silent> * :<C-u>call GetVisualSelection()<cr>/<C-R>=@/<cr><cr>
vnoremap <silent> # :<C-u>call GetVisualSelection()<cr>?<C-R>=@/<cr><cr>

let g:dispatch_tmux_height = "15"

let test#strategy = "dispatch_background"

function! TmuxTransform(cmd) abort
  return 'tmux send -t bottom-left '.shellescape(a:cmd).' Enter'
endfunction

let g:test#custom_transformations = {'tmux': function('TmuxTransform')}

nnoremap <leader>rf <cmd>TestFile<cr>
nnoremap <leader>rs <cmd>TestNearest<cr>
nnoremap <leader>rl <cmd>TestLast<cr>
nnoremap <leader>ra <cmd>TestSuite<cr>

xmap ga <Plug>(EasyAlign)
nmap ga <Plug>(EasyAlign)

imap kj <Esc>

" Yank current file path relative to the project root
nnoremap <leader>yf :let @+=expand("%")<cr>
" Yank current file path with line number relative to the project root
nnoremap <leader>yl :let @+=expand("%") . ':' . line(".")<cr>

" n always search forward and N backward
nnoremap <expr> n (v:searchforward ? 'nzzzv' : 'Nzzzv')
nnoremap <expr> N (v:searchforward ? 'Nzzzv' : 'nzzzv')

" Close all the buffers except the current buffer.
map <leader>bo :BufOnly<cr>
" Close the current buffer
map <silent> <leader>bd :bd!<cr>
" Close all the buffers
map <leader>ba :bufdo bd<cr>
map <leader>. :bnext<cr>
map <leader>m :bprevious<cr>

augroup langs
  autocmd!
  autocmd BufNewFile,BufRead Dockerfile* set filetype=dockerfile
  autocmd BufNewFile,BufRead Brewfile,Gemfile* set filetype=ruby
  autocmd BufNewFile,BufRead Gemfile*.lock set filetype=gemfilelock
  "autocmd FileType python setlocal tabstop=4 softtabstop=4 shiftwidth=4 textwidth=120 fileformat=unix cinwords=if,elif,else,for,while,try,except,finally,def,class,with
  "autocmd FileType yaml setlocal tabstop=2 softtabstop=2 shiftwidth=2 textwidth=120 fileformat=unix
  "autocmd FileType go setlocal noexpandtab tabstop=4 shiftwidth=4
  set rtp+=~/.opam/default/share/ocp-indent/vim
  let g:opamshare = substitute(system('opam var share'),'\n$','','''')
  execute "set rtp+=" . g:opamshare . "/merlin/vim"
augroup end

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Helper functions
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
function! GetVisualSelection() range
  let l:saved_reg = @"
  execute "normal! vgvy"

  let l:pattern = escape(@", "\\/.*'$^~[]")
  let l:pattern = substitute(l:pattern, "\n$", "", "")

  let @/ = l:pattern
  let @" = l:saved_reg
endfunction
